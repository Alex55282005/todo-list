{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function useAsync(cb) {\n  _s();\n\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const [status, setStatus] = useState(\"IDLE\");\n  const [data, setData] = useState(defaultValue);\n\n  function run() {\n    setStatus(\"LOADING\");\n    cb().then(data => {\n      setStatus(\"DONE\");\n      setData(data);\n      return data;\n    }).catch(error => {\n      setStatus(\"ERROR\");\n      return Promise.reject(error);\n    });\n  }\n\n  return {\n    status,\n    data,\n    setData,\n    run\n  };\n}\n\n_s(useAsync, \"TKUz8bWHeA3HhoGOii9On3REPYA=\");","map":{"version":3,"sources":["/home/b1ame/hillel/DZ/dz14/HW12/src/hooks/common.js"],"names":["useState","useAsync","cb","defaultValue","status","setStatus","data","setData","run","then","catch","error","Promise","reject"],"mappings":";;AAAA,SAAUA,QAAV,QAA0B,OAA1B;AAEA,OAAO,SAASC,QAAT,CAAkBC,EAAlB,EAAyC;AAAA;;AAAA,MAAnBC,YAAmB,uEAAJ,EAAI;AAC9C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,MAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,YAAD,CAAhC;;AAEA,WAASK,GAAT,GAAe;AACbH,IAAAA,SAAS,CAAC,SAAD,CAAT;AAEAH,IAAAA,EAAE,GACCO,IADH,CACSH,IAAD,IAAU;AACdD,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAE,MAAAA,OAAO,CAACD,IAAD,CAAP;AACA,aAAOA,IAAP;AACD,KALH,EAMGI,KANH,CAMUC,KAAD,IAAW;AAChBN,MAAAA,SAAS,CAAC,OAAD,CAAT;AACA,aAAOO,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,KATH;AAUD;;AAED,SAAO;AACLP,IAAAA,MADK;AAELE,IAAAA,IAFK;AAGLC,IAAAA,OAHK;AAILC,IAAAA;AAJK,GAAP;AAMD;;GAzBeP,Q","sourcesContent":["import {  useState } from \"react\";\r\n\r\nexport function useAsync(cb, defaultValue = []) {\r\n  const [status, setStatus] = useState(\"IDLE\");\r\n  const [data, setData] = useState(defaultValue);\r\n\r\n  function run() {\r\n    setStatus(\"LOADING\");\r\n\r\n    cb()\r\n      .then((data) => {\r\n        setStatus(\"DONE\");\r\n        setData(data);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        setStatus(\"ERROR\");\r\n        return Promise.reject(error);\r\n      });\r\n  }\r\n\r\n  return {\r\n    status,\r\n    data,\r\n    setData,\r\n    run,\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}